=begin
#GroupBy Retail

#GroupBy Retail API

The version of the OpenAPI document: 0.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module GbRetailapiClient
  class AutocompleteApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # A simple request used to get completes the specified prefix with keyword suggestions.
    # @param x_groupby_customer_id [String] Header on incoming HTTP requests that is populated by the API gateway and indicates the customer ID.
    # @param identity [Identity] 
    # @param merchandiser [Merchandiser] 
    # @param [Hash] opts the optional parameters
    # @option opts [Request] :request Object which is represent autocomplete request and encapsulate all passed parameters. 
    # @return [SearchResults]
    def autocompletesearch(x_groupby_customer_id, identity, merchandiser, opts = {})
      data, _status_code, _headers = autocompletesearch_with_http_info(x_groupby_customer_id, identity, merchandiser, opts)
      data
    end

    # A simple request used to get completes the specified prefix with keyword suggestions.
    # @param x_groupby_customer_id [String] Header on incoming HTTP requests that is populated by the API gateway and indicates the customer ID.
    # @param identity [Identity] 
    # @param merchandiser [Merchandiser] 
    # @param [Hash] opts the optional parameters
    # @option opts [Request] :request Object which is represent autocomplete request and encapsulate all passed parameters. 
    # @return [Array<(SearchResults, Integer, Hash)>] SearchResults data, response status code and response headers
    def autocompletesearch_with_http_info(x_groupby_customer_id, identity, merchandiser, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AutocompleteApi.autocompletesearch ...'
      end
      # verify the required parameter 'x_groupby_customer_id' is set
      if @api_client.config.client_side_validation && x_groupby_customer_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_groupby_customer_id' when calling AutocompleteApi.autocompletesearch"
      end
      # verify the required parameter 'identity' is set
      if @api_client.config.client_side_validation && identity.nil?
        fail ArgumentError, "Missing the required parameter 'identity' when calling AutocompleteApi.autocompletesearch"
      end
      # verify the required parameter 'merchandiser' is set
      if @api_client.config.client_side_validation && merchandiser.nil?
        fail ArgumentError, "Missing the required parameter 'merchandiser' when calling AutocompleteApi.autocompletesearch"
      end
      # resource path
      local_var_path = '/api/request'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'identity'] = identity
      query_params[:'merchandiser'] = merchandiser
      query_params[:'request'] = opts[:'request'] if !opts[:'request'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-Groupby-Customer-Id'] = x_groupby_customer_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SearchResults'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['GroupByIncEmployee', 'ClientKey']

      new_options = opts.merge(
        :operation => :"AutocompleteApi.autocompletesearch",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AutocompleteApi#autocompletesearch\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
